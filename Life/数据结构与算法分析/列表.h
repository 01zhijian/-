#pragma once
class 列表
{
};


/* ------------------------------ 学习笔记 ------------------------------ *
列表
    作为 ADT 的列表
    基于数组的列表实现
    使用动态分配的基于数组实现的列表
    对链表的介绍
    C++ 中基于指针实现的链表


*/

/* ------------------------------ 学习笔记 ------------------------------ *
设计列表类
    构造函数：创建空列表
    empty：检查列表，根据列表是否包含返回真或者假
    insert：通过在列表中给定位置增加一个值来修改列表
    erase：通过删除列表中给定位置上的值来修改列表
    display：遍历列表，显示每个元素
*/


/* ------------------------------ 学习笔记 ------------------------------ *
实现列表类
    静态数组
    动态数组
    基于指针来实现链表
    基于数组来实现链表

实现 Stack 类
    静态数组
    动态数组
    链式栈

实现 Queue 类
    静态数组
    动态数组
    链式队列

*/

/* ------------------------------ 学习笔记 ------------------------------ *
运行时栈
    只要一个函数开始执行（或者说，被激活了），一个活动记录（或栈框架）就将
被创建来存储这个函数的当前环境，其中包含了如下的一些信息，即这个函数的形参，
函数的返回值，局部变量，以及当这个函数终止执行返回时，将要执行的指令的地址。
如果应为调用另一个（或同一个）函数而中段函数的执行，那么必须存储当前活动记
录，这样当这个函数恢复执行的时候，可以通过存储的活动记录来将相关信息恢复到
中断之前的状态。栈是合适的数据结构，有因为需要在程序运行期间操纵这个栈，所
以它被称为运行时栈。

循环链表
    对于循环链表的一些应用，维护一个指向最后一个节点的指针将比维护一个指向
第一个节点的指针更好些

队列的应用：缓冲区和调度、交互式输入、计算机系统的操作中出现的等待队列、队
列还可以被用来调度进入计算机的任务


*/


